name: Generate Documentation

on:
  schedule:
    - cron: '0 0 * * *'  # Corre diariamente
  workflow_dispatch:      # Permite ejecutar manualmente
  push:
    branches: [ "main" ]  # Solo en la rama principal
  issues:
    types: [opened, closed, edited, deleted]
  milestone:
    types: [created, closed, edited, deleted]

# Agregamos permisos explícitos
permissions:
  contents: write       # Para poder hacer push
  pages: write         # Para GitHub Pages
  id-token: write      # Para autenticación
  issues: read         # Para leer issues
  pull-requests: write  # Necesario para crear PRs

jobs:
  generate-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}  # Token explícito
          fetch-depth: 0  # Historia completa para commits

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyGithub markdown2 jinja2

      - name: Fetch Issues and Milestones
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python scripts/fetch_github_data.py

      - name: Generate Documentation
        run: |
          python scripts/generate_docs.py

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "docs: Update documentation [skip ci]"
          title: "docs: Update project documentation"
          body: |
            Automatic update of project documentation based on:
            - Issues
            - Milestones
            
            This PR was automatically generated by the documentation workflow.
          branch: docs/update-documentation
          base: main
          delete-branch: true
          labels: |
            documentation
            automated pr 